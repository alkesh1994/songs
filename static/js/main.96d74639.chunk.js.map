{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","key","title","className","onClick","selectSong","renderList","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"2NAIMA,E,2KAEU,IAAD,OACR,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GACzB,OACI,yBAAKC,IAAKD,EAAKE,MAAOC,UAAU,QAC5B,yBAAKA,UAAU,yBACV,4BACAA,UAAU,oBACVC,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAFrC,WAKL,yBAAKG,UAAU,WACbH,EAAKE,a,+BAUtB,OAAQ,yBAAKC,UAAU,mBAAmBP,KAAKU,kB,GAvB5BC,aA+BRC,eAJS,SAACC,GACtB,MAAM,CAAEX,MAAOW,EAAMX,SAGe,CAAEO,WClCd,SAAAL,GAEvB,MAAO,CACHU,KAAK,gBACLC,QAAQX,KD8BDQ,CAAwCb,GEbxCa,eAHS,SAACC,GACrB,MAAM,CAAET,KAAMS,EAAMG,gBAETJ,EAlBI,SAAC,GAAc,IAAZR,EAAW,EAAXA,KAClB,OAAIA,EAIJ,6BACI,4CACJ,oCAAUA,EAAKE,OAEZ,uCAAaF,EAAKa,WAPV,mDCaAC,EAfH,WACR,OACA,yBAAKX,UAAU,qBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,qBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,qBACX,kBAAC,EAAD,UCUDY,cAAgB,CAC3BjB,MAnBiB,WACjB,MAAO,CACH,CAAEI,MAAM,YAAYW,SAAS,QAC7B,CAAEX,MAAM,WAAWW,SAAS,QAC5B,CAAEX,MAAM,WAAWW,SAAS,QAC5B,CAAEX,MAAM,WAAWW,SAAS,UAehCD,aATwB,WAAmC,IAAlCA,EAAiC,uDAAlB,KAAOI,EAAW,uCAC1D,MAAmB,kBAAhBA,EAAON,KACCM,EAAOL,QAEXC,KCZXK,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IACzB,kBAAC,EAAD,OAEJC,SAASC,cAAc,Y","file":"static/js/main.96d74639.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSong } from '../actions';\r\n\r\nclass SongList extends Component{\r\n   \r\n   renderList(){\r\n       return this.props.songs.map((song) => {\r\n           return (\r\n               <div key={song.title} className=\"item\">\r\n                   <div className=\"right floated content\">\r\n                        <button \r\n                        className=\"ui button primary\"\r\n                        onClick={() => this.props.selectSong(song)}\r\n                        >Select</button>\r\n                   </div>\r\n                   <div className=\"content\">\r\n                    {song.title}\r\n                   </div>\r\n\r\n               </div>\r\n           );\r\n       });\r\n   }\r\n   \r\n    render(){\r\n       \r\n    return (<div className=\"ui divided list\">{this.renderList()}</div>);\r\n   } \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return{ songs: state.songs }; \r\n}\r\n\r\nexport default connect(mapStateToProps,{ selectSong })(SongList);\r\n","//Action Creator\r\n export const selectSong = song => {\r\n    //Return an action\r\n    return {\r\n        type:'SONG_SELECTED',\r\n        payload:song\r\n    };\r\n};\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst SongDetail = ({ song }) => {\r\n    if(!song) {\r\n        return <div> Select a song </div>\r\n    }\r\n    return (\r\n    <div>\r\n        <h3>Details For:</h3>\r\n    <p>Title:{song.title}</p>\r\n    \r\n       <p>Duration:{song.duration}\r\n    </p>\r\n    </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{ song: state.selectedSong }; \r\n }\r\nexport default connect(mapStateToProps)(SongDetail);","import React from 'react';\r\nimport SongList from './SongList';\r\nimport SongDetail from './SongDetail';\r\n\r\nconst App = () => {\r\n    return (\r\n    <div className=\"ui container grid\">\r\n        <div className=\"ui row\">\r\n            <div className=\"column eight wide\">\r\n                <SongList/>\r\n            </div>\r\n            <div className=\"column eight wide\">\r\n                <SongDetail/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default App;","import {combineReducers} from 'redux';\r\n\r\n\r\n//song list reducer\r\nconst songsReducer = () =>{\r\n    return [\r\n        { title:'No Scrubs',duration:'4:05' },\r\n        { title:'Macarena',duration:'2:05' },\r\n        { title:'All Star',duration:'3:05' },\r\n        { title:'One Love',duration:'7:05' }\r\n    ];\r\n};\r\n\r\n// song select reducer\r\n\r\nconst selectedSongReducer = (selectedSong = null , action) => {\r\n    if(action.type === 'SONG_SELECTED'){\r\n        return action.payload;\r\n    }\r\n    return selectedSong;\r\n};\r\n\r\nexport default combineReducers({\r\n    songs:songsReducer,\r\n    selectedSong: selectedSongReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n        <App/>\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}